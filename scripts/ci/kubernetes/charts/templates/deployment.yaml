apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "airflow.fullname" . }}
  labels:
    app: {{ template "airflow.name" . }}
    chart: {{ template "airflow.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "airflow.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmaps.yaml") . | sha256sum }}
      labels:
        app: {{ template "airflow.name" . }}
        release: {{ .Release.Name }}
    spec:
      initContainers:
        - name: init
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
          - name: airflow-configmap
            mountPath: /root/airflow/airflow.cfg
            subPath: airflow.cfg
          - name: airflow-useless
            mountPath: /root/airflow/dags
          - name: test-volume
            mountPath: /root/test_volume
          env:
          - name: SQL_ALCHEMY_CONN
            valueFrom:
              secretKeyRef:
                name: airflow-secrets
                key: sql_alchemy_conn
          command:
          - "bash"
          args:
          - "-cx"
          - "./tmp/airflow-test-env-init.sh"
      containers:
        - name: git-sync
          image: "{{ .Values.gitsync.image }}:{{ .Values.gitsync.tag }}"
          imagePullPolicy: {{ .Values.gitsync.pullPolicy }}
          volumeMounts:
          - name: airflow-configmap
            mountPath: /root/airflow/airflow.cfg
            subPath: airflow.cfg
          - name: airflow-dags
            mountPath: /git
          - name: git-secret
            mountPath: /etc/git-secret
          env:
          - name: GIT_SYNC_REPO
            value: git@code.devops.xiaohongshu.com:devops/Airflow-DAGs.git
          - name: GIT_SYNC_SSH
            value: true
          - name: GIT_SYNC_ROOT
            value: {{ .Values.gitsync.env.GIT_SYNC_ROOT }}
          - name: GIT_SYNC_DEST
            value: {{ .Values.gitsync.env.GIT_SYNC_DEST }}
          - name: GIT_SYNC_BRANCH
            value: {{ .Values.gitsync.env.GIT_SYNC_BRANCH }}
          securityContext:
            runAsUser: 0
        - name: webserver
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
          - name: webserver
            containerPort: 8080
          args: ["webserver"]
          env:
          - name: AIRFLOW_KUBE_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: SQL_ALCHEMY_CONN
            valueFrom:
              secretKeyRef:
                name: airflow-secrets
                key: sql_alchemy_conn
          volumeMounts:
          - name: airflow-configmap
            mountPath: /root/airflow/airflow.cfg
            subPath: airflow.cfg
          - name: airflow-dags
            mountPath: /root/airflow/dags
          - name: airflow-logs
            mountPath: /root/airflow/logs
        - name: scheduler
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: ["scheduler"]
          env:
          - name: AIRFLOW_KUBE_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: SQL_ALCHEMY_CONN
            valueFrom:
              secretKeyRef:
                name: airflow-secrets
                key: sql_alchemy_conn
          volumeMounts:
          - name: airflow-configmap
            mountPath: /root/airflow/airflow.cfg
            subPath: airflow.cfg
          - name: airflow-dags
            mountPath: /root/airflow/dags
          - name: airflow-logs
            mountPath: /root/airflow/logs
      volumes:
      - name: airflow-configmap
        configMap:
          name: airflow-configmap
      - name: airflow-useless
        emptyDir: {}
      - name: airflow-dags
        emptyDir: {}
      - name: test-volume
        emptyDir: {}
      - name: airflow-logs
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim | default (include "airflow.fullname" .) }}
      {{- else }}
        emptyDir: {}
      {{- end -}}
      - name: git-secret
        secret:
          secretName: git-creds
          defaultMode: 256
